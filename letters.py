#!usr/bin/env/python3
# -*- coding: utf-8 -*-

txt = """Анализ текста по буквам. Практическое задание №2

Написать программу на Python для анализа данного текста, который сохранён в переменной txt по буквам. Программа на Python должна проанализировать данный текст и вывести, или, как некоторые Users говорят, напечатать следующую информацию. Необходимо вывести: 

# Общее количество букв в данном тексте
# Общее количество слов в данном тексте. Словом, считаются любые символы, разделённые пробелами или переходом на следующую строку.
# Подсчитать, каких букв и сколько встречается в тексте
# Вывести их на печать
# 1) в алфавитном порядке
# 2) в порядке убывания частоты
# Регистр букв значения не имеет! Например, в тексте 'Aa' буква 'а'
# встречается 2 раза
# В структуре данных, которую вы выберете для хранения информации
# во время работы программы, НЕ ХРАНИТЬ буквы, которые не встретились"""

# ***********************************
# Тут должна находиться Ваша программа

# Заменяем символы переноса строки чтобы текст был более однородным для разбора на слова
txt = txt.replace('\n', ' ')
# Разбиваем текст на слова, разделитель - пробел. Результат - список.
words = txt.split()
# Убираем все пробелы для подсчета символов и приводим их все в единый регистр (нижний)
txt = txt.replace(' ', '').lower()

# Выводим количество букв (символов) в тексте
print("Всего символов в тексте:", len(txt))

# Выводим количество слов в тексте
print("Слов в тексте:", len(words))

# Преобразуем текст в список символов, чтобы посчитать каждый и отсортировать
letters = list(txt)

# Создаем список уникальных символов в тексте и заполняем из списка всех символов
unique_letters = []
for x in letters:
    if x not in unique_letters:
        unique_letters.append(x)
# Создаем словарь из пар символ-количество
dict_letters = {}
for y in unique_letters:
    dict_letters[y] = letters.count(y)

# Выбираем из словаря каждую пару ключ-значение и сортируем в алфавитном порядке
sort_alphabet = sorted(dict_letters.items())
print('====================================')
print('Символы текста в алфавитном порядке.')
print('Символ: Количество:')
for z in sort_alphabet:
    print(f'{z[0]}       {z[1]}')
# Чтобы отсортировать по убыванию частоты, меняем в паре ключ-значение объекты местами и указываем чтобы сортировка шла в обратном порядке
sort_quantity = sorted(dict_letters.items(), key = lambda dict_item:(dict_item[1], dict_item[0]), reverse=True)
print('====================================================')
print('Символы текста в порядке убывания частоты появления.')
print('Символ: Количество:')
for w in sort_quantity:
    print(f'{w[0]}       {w[1]}')
# ***********************************
print('END')
